(globalThis.webpackChunkweb_stories_wp=globalThis.webpackChunkweb_stories_wp||[]).push([[7098],{"./node_modules/@ffmpeg/ffmpeg/src/browser/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{defaultOptions:()=>defaultOptions,fetchFile:()=>fetchFile,getCreateFFmpegCore:()=>getCreateFFmpegCore});var ffmpeg_package=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/package.json");__webpack_require__("./node_modules/process/browser.js");const defaultOptions={corePath:`https://unpkg.com/@ffmpeg/core@${ffmpeg_package.devDependencies["@ffmpeg/core"].substring(1)}/dist/ffmpeg-core.js`};var log=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/src/utils/log.js"),errors=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/src/utils/errors.js");const toBlobURL=async(url,mimeType)=>{(0,log.log)("info",`fetch ${url}`);const buf=await(await fetch(url)).arrayBuffer();(0,log.log)("info",`${url} file size = ${buf.byteLength} bytes`);const blob=new Blob([buf],{type:mimeType}),blobURL=URL.createObjectURL(blob);return(0,log.log)("info",`${url} blob URL = ${blobURL}`),blobURL},getCreateFFmpegCore=async({corePath:_corePath,workerPath:_workerPath,wasmPath:_wasmPath})=>{if("undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){if("string"!=typeof _corePath)throw Error("corePath should be a string!");const coreRemotePath=new URL(_corePath,"file:///home/runner/work/web-stories-wp/web-stories-wp/node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js").href,corePath=await toBlobURL(coreRemotePath,"application/javascript"),wasmPath=await toBlobURL(void 0!==_wasmPath?_wasmPath:coreRemotePath.replace("ffmpeg-core.js","ffmpeg-core.wasm"),"application/wasm"),workerPath=await toBlobURL(void 0!==_workerPath?_workerPath:coreRemotePath.replace("ffmpeg-core.js","ffmpeg-core.worker.js"),"application/javascript");return"undefined"==typeof createFFmpegCore?new Promise((resolve=>{if(globalThis.importScripts(corePath),"undefined"==typeof createFFmpegCore)throw Error((0,errors.CREATE_FFMPEG_CORE_IS_NOT_DEFINED)(coreRemotePath));(0,log.log)("info","ffmpeg-core.js script loaded"),resolve({createFFmpegCore,corePath,wasmPath,workerPath})})):((0,log.log)("info","ffmpeg-core.js script is loaded already"),Promise.resolve({createFFmpegCore,corePath,wasmPath,workerPath}))}if("string"!=typeof _corePath)throw Error("corePath should be a string!");const coreRemotePath=new URL(_corePath,"file:///home/runner/work/web-stories-wp/web-stories-wp/node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js").href,corePath=await toBlobURL(coreRemotePath,"application/javascript"),wasmPath=await toBlobURL(coreRemotePath.replace("ffmpeg-core.js","ffmpeg-core.wasm"),"application/wasm"),workerPath=await toBlobURL(coreRemotePath.replace("ffmpeg-core.js","ffmpeg-core.worker.js"),"application/javascript");return"undefined"==typeof createFFmpegCore?new Promise((resolve=>{const script=document.createElement("script"),eventHandler=()=>{if(script.removeEventListener("load",eventHandler),"undefined"==typeof createFFmpegCore)throw Error((0,errors.CREATE_FFMPEG_CORE_IS_NOT_DEFINED)(coreRemotePath));(0,log.log)("info","ffmpeg-core.js script loaded"),resolve({createFFmpegCore,corePath,wasmPath,workerPath})};script.src=corePath,script.type="text/javascript",script.addEventListener("load",eventHandler),document.getElementsByTagName("head")[0].appendChild(script)})):((0,log.log)("info","ffmpeg-core.js script is loaded already"),Promise.resolve({createFFmpegCore,corePath,wasmPath,workerPath}))},fetchFile=async _data=>{let data=_data;if(void 0===_data)return new Uint8Array;if("string"==typeof _data)if(/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(_data))data=atob(_data.split(",")[1]).split("").map((c=>c.charCodeAt(0)));else{const res=await fetch(new URL(_data,"file:///home/runner/work/web-stories-wp/web-stories-wp/node_modules/@ffmpeg/ffmpeg/src/browser/fetchFile.js").href);data=await res.arrayBuffer()}else(_data instanceof File||_data instanceof Blob)&&(data=await(blob=_data,new Promise(((resolve,reject)=>{const fileReader=new FileReader;fileReader.onload=()=>{resolve(fileReader.result)},fileReader.onerror=({target:{error:{code}}})=>{reject(Error(`File could not be read! Code=${code}`))},fileReader.readAsArrayBuffer(blob)}))));var blob;return new Uint8Array(data)}},"./node_modules/@ffmpeg/ffmpeg/src/config.js":module=>{module.exports={defaultArgs:["./ffmpeg","-nostdin","-y"],baseOptions:{log:!1,logger:()=>{},progress:()=>{},corePath:""}}},"./node_modules/@ffmpeg/ffmpeg/src/createFFmpeg.js":(module,__unused_webpack_exports,__webpack_require__)=>{const{defaultArgs,baseOptions}=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/src/config.js"),parseArgs=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/src/utils/parseArgs.js"),{defaultOptions,getCreateFFmpegCore}=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/src/browser/index.js"),{version}=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/package.json"),NO_LOAD=Error("ffmpeg.wasm is not ready, make sure you have completed load().");module.exports=(_options={})=>{const{log:optLog,logger,progress:optProgress,...options}={...baseOptions,...defaultOptions,..._options};let Core=null,ffmpeg=null,runResolve=null,runReject=null,running=!1,customLogger=()=>{},logging=optLog,progress=optProgress,duration=0,frames=0,readFrames=!1,ratio=0;const log=(type,message)=>{customLogger({type,message}),logging&&console.log(`[${type}] ${message}`)},ts2sec=ts=>{const[h,m,s]=ts.split(":");return 60*parseFloat(h)*60+60*parseFloat(m)+parseFloat(s)},parseMessage=({type,message})=>{log(type,message),((message,prog)=>{if("string"==typeof message)if(message.startsWith("  Duration")){const ts=message.split(", ")[0].split(": ")[1],d=ts2sec(ts);prog({duration:d,ratio}),(0===duration||duration>d)&&(duration=d,readFrames=!0)}else if(readFrames&&message.startsWith("    Stream")){const match=message.match(/([\d.]+) fps/);if(match){const fps=parseFloat(match[1]);frames=duration*fps}else frames=0;readFrames=!1}else if(message.startsWith("frame")||message.startsWith("size")){const ts=message.split("time=")[1].split(" ")[0],t=ts2sec(ts),match=message.match(/frame=\s*(\d+)/);if(frames&&match){const f=parseFloat(match[1]);ratio=Math.min(f/frames,1)}else ratio=t/duration;prog({ratio,time:t})}else message.startsWith("video:")&&(prog({ratio:1}),duration=0)})(message,progress),(message=>{"FFMPEG_END"===message&&null!==runResolve&&(runResolve(),runResolve=null,runReject=null,running=!1)})(message)};return log("info",`use ffmpeg.wasm v${version}`),{setProgress:_progress=>{progress=_progress},setLogger:_logger=>{customLogger=_logger},setLogging:_logging=>{logging=_logging},load:async()=>{if(log("info","load ffmpeg-core"),null!==Core)throw Error("ffmpeg.wasm was loaded, you should not load it again, use ffmpeg.isLoaded() to check next time.");{log("info","loading ffmpeg-core");const{createFFmpegCore,corePath,workerPath,wasmPath}=await getCreateFFmpegCore(options);Core=await createFFmpegCore({mainScriptUrlOrBlob:corePath,printErr:message=>parseMessage({type:"fferr",message}),print:message=>parseMessage({type:"ffout",message}),locateFile:(path,prefix)=>{if("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope){if(void 0!==wasmPath&&path.endsWith("ffmpeg-core.wasm"))return wasmPath;if(void 0!==workerPath&&path.endsWith("ffmpeg-core.worker.js"))return workerPath}return prefix+path}}),ffmpeg=Core.cwrap(options.mainName||"proxy_main","number",["number","number"]),log("info","ffmpeg-core loaded")}},isLoaded:()=>null!==Core,run:(..._args)=>{if(log("info",`run ffmpeg command: ${_args.join(" ")}`),null===Core)throw NO_LOAD;if(running)throw Error("ffmpeg.wasm can only run one command at a time");return running=!0,new Promise(((resolve,reject)=>{const args=[...defaultArgs,..._args].filter((s=>0!==s.length));runResolve=resolve,runReject=reject,ffmpeg(...parseArgs(Core,args))}))},exit:()=>{if(null===Core)throw NO_LOAD;runReject&&runReject("ffmpeg has exited"),running=!1;try{Core.exit(1)}catch(err){log(err.message),runReject&&runReject(err)}finally{Core=null,ffmpeg=null,runResolve=null,runReject=null}},FS:(method,...args)=>{if(log("info",`run FS.${method} ${args.map((arg=>"string"==typeof arg?arg:`<${arg.length} bytes binary file>`)).join(" ")}`),null===Core)throw NO_LOAD;{let ret=null;try{ret=Core.FS[method](...args)}catch(e){throw"readdir"===method?Error(`ffmpeg.FS('readdir', '${args[0]}') error. Check if the path exists, ex: ffmpeg.FS('readdir', '/')`):"readFile"===method?Error(`ffmpeg.FS('readFile', '${args[0]}') error. Check if the path exists`):Error("Oops, something went wrong in FS operation.")}return ret}}}}},"./node_modules/@ffmpeg/ffmpeg/src/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{__webpack_require__("./node_modules/regenerator-runtime/runtime.js");const createFFmpeg=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/src/createFFmpeg.js"),{fetchFile}=__webpack_require__("./node_modules/@ffmpeg/ffmpeg/src/browser/index.js");module.exports={createFFmpeg,fetchFile}},"./node_modules/@ffmpeg/ffmpeg/src/utils/errors.js":module=>{module.exports={CREATE_FFMPEG_CORE_IS_NOT_DEFINED:corePath=>`\ncreateFFmpegCore is not defined. ffmpeg.wasm is unable to find createFFmpegCore after loading ffmpeg-core.js from ${corePath}. Use another URL when calling createFFmpeg():\n\nconst ffmpeg = createFFmpeg({\n  corePath: 'http://localhost:3000/ffmpeg-core.js',\n});\n`}},"./node_modules/@ffmpeg/ffmpeg/src/utils/log.js":module=>{let logging=!1,customLogger=()=>{};module.exports={logging,setLogging:_logging=>{logging=_logging},setCustomLogger:logger=>{customLogger=logger},log:(type,message)=>{customLogger({type,message}),logging&&console.log(`[${type}] ${message}`)}}},"./node_modules/@ffmpeg/ffmpeg/src/utils/parseArgs.js":module=>{module.exports=(Core,args)=>{const argsPtr=Core._malloc(args.length*Uint32Array.BYTES_PER_ELEMENT);return args.forEach(((s,idx)=>{const sz=Core.lengthBytesUTF8(s)+1,buf=Core._malloc(sz);Core.stringToUTF8(s,buf,sz),Core.setValue(argsPtr+Uint32Array.BYTES_PER_ELEMENT*idx,buf,"i32")})),[args.length,argsPtr]}},"./node_modules/@ffmpeg/ffmpeg/package.json":module=>{"use strict";module.exports=JSON.parse('{"name":"@ffmpeg/ffmpeg","version":"0.11.5","description":"FFmpeg WebAssembly version","main":"src/index.js","types":"src/index.d.ts","directories":{"example":"examples"},"scripts":{"start":"node scripts/server.js","start:worker":"node scripts/worker-server.js","build":"rimraf dist && webpack --config scripts/webpack.config.prod.js","build:worker":"rimraf dist && webpack --config scripts/webpack.config.worker.prod.js","prepublishOnly":"npm run build","lint":"eslint src","wait":"rimraf dist && wait-on http://localhost:3000/dist/ffmpeg.dev.js","test":"npm-run-all -p -r start test:all","test:all":"npm-run-all wait test:browser:ffmpeg test:node:all","test:node":"node node_modules/mocha/bin/_mocha --exit --bail --require ./scripts/test-helper.js","test:node:all":"npm run test:node -- ./tests/*.test.js","test:browser":"mocha-headless-chrome -a allow-file-access-from-files -a incognito -a no-sandbox -a disable-setuid-sandbox -a disable-logging -t 300000","test:browser:ffmpeg":"npm run test:browser -- -f ./tests/ffmpeg.test.html"},"browser":{"./src/node/index.js":"./src/browser/index.js"},"repository":{"type":"git","url":"git+https://github.com/ffmpegwasm/ffmpeg.wasm.git"},"keywords":["ffmpeg","WebAssembly","video"],"author":"Jerome Wu <jeromewus@gmail.com>","license":"MIT","bugs":{"url":"https://github.com/ffmpegwasm/ffmpeg.wasm/issues"},"engines":{"node":">=12.16.1"},"homepage":"https://github.com/ffmpegwasm/ffmpeg.wasm#readme","dependencies":{"is-url":"^1.2.4","node-fetch":"^2.6.1","regenerator-runtime":"^0.13.7","resolve-url":"^0.2.1"},"devDependencies":{"@babel/core":"^7.12.3","@babel/preset-env":"^7.12.1","@ffmpeg/core":"^0.11.0","@types/emscripten":"^1.39.4","babel-eslint":"^10.1.0","babel-loader":"^8.1.0","chai":"^4.2.0","cors":"^2.8.5","eslint":"^7.12.1","eslint-config-airbnb-base":"^14.1.0","eslint-plugin-import":"^2.22.1","express":"^4.17.1","mocha":"^8.2.1","mocha-headless-chrome":"^2.0.3","npm-run-all":"^4.1.5","wait-on":"^5.3.0","webpack":"^5.3.2","webpack-cli":"^4.1.0","webpack-dev-middleware":"^4.0.0"}}')}}]);